[code]
source = memory

[codepack]
source = memory

[argpack]
source = memory

[delivery]
source = memory

[code_snapshot]
source = memory

[codepack_snapshot]
source = memory

[callback]
source = file
; path = scripts

[apiserver]
scheduler = self

[scheduler]
source = memory

[worker]
source = memory
topic = codepack
interval = 1
; script_path = scripts/run_snapshot.py
logger = worker-logger
background = True

[supervisor]
source = memory
topic = codepack

[docker_manager]
source = docker
; path = scripts
run_opt = {"dns": ["8.8.8.8"], "auto_remove": true}

[interpreter_manager]
path = /opt/codepack/anaconda3/envs
run_opt = {}

[logger]
; config_path = logging.json
name = default-logger
log_dir = logs

[ssh]
ssh_host = localhost
ssh_port = 22
ssh_username = codepack
ssh_password = codepack

[mongodb]
host = localhost
port = 27017
; username = ?
; password = ?
; replicaSet = ?

[mysql]
host = localhost
port = 3306
user = codepack
passwd = codepack
charset = utf8
cursorclass = pymysql.cursors.Cursor
; cursorclass = pymysql.cursors.DictCursor

[mssql]
host = localhost
port = 1433
user = codepack
password = codepack
charset = utf8
as_dict = False

[oracledb]
host = localhost
port = 1621
service_name = codepack
user = codepack
password = codepack
as_dict = False

[kafka]
bootstrap_servers=localhost:9092

[dynamodb]
service_name = dynamodb
; region_name = codepack
; endpoint_url = https://localhost:443
aws_access_key_id = codepack
aws_secret_access_key = codepack

[docker]
base_url = unix://var/run/docker.sock

[s3]
service_name = s3
; region_name = codepack
; endpoint_url = https://localhost:443
aws_access_key_id = codepack
aws_secret_access_key = codepack
