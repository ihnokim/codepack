[code]
source = mongodb
db = codepack
collection = code

[codepack]
source = mongodb
db = codepack
collection = codepack

[argpack]
source = mongodb
db = codepack
collection = argpack

[delivery]
source = s3
bucket = codepack
path = delivery

[code_snapshot]
source = mongodb
db = codepack
collection = code_snapshot

[codepack_snapshot]
source = mongodb
db = codepack
collection = codepack_snapshot

[callback]
source = file
; path = scripts

[apiserver]
scheduler = http://localhost:8001

[scheduler]
source = mongodb
db = codepack
collection = scheduler
supervisor = http://localhost:8000

[worker]
source = kafka
topic = codepack
group_id = codepack_worker
interval = 1
supervisor = http://localhost:8000
; script_path = scripts/run_snapshot.py
logger = worker-logger
background = False

[supervisor]
source = kafka
topic = codepack

[docker_manager]
source = docker
; path = scripts
run_opt = {"dns": ["8.8.8.8"], "auto_remove": true}

[interpreter_manager]
path = /opt/codepack/anaconda3/envs
run_opt = {}

[logger]
; config_path = logging.json
name = error-logger
log_dir = logs

[ssh]
ssh_host = 1.2.3.4
ssh_port = 22
ssh_username = ?
ssh_password = ?

[mongodb]
host = localhost,?
port = 27017
username = ?
password = ?
replicaSet = ?

[mysql]
host = localhost
port = 3306
user = ?
passwd = ?
charset = utf8
cursorclass = pymysql.cursors.Cursor
; cursorclass = pymysql.cursors.DictCursor

[mssql]
host = localhost
port = 1433
user = ?
password = ?
charset = utf8
as_dict = False

[oracledb]
host = localhost
port = 1621
service_name = ?
user = ?
password = ?
as_dict = False

[kafka]
bootstrap_servers=?:9092,?:9092,?:9092

[rest_api]
my_service = https://?:?/?

[dynamodb]
service_name = dynamodb
region_name = ?
endpoint_url = https://?
aws_access_key_id = ?
aws_secret_access_key = ?

[docker]
base_url = unix://var/run/docker.sock

[s3]
service_name = s3
region_name = ?
endpoint_url = https://?
aws_access_key_id = ?
aws_secret_access_key = ?
